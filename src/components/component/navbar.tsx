/**
 * This code was generated by v0 by Vercel.
 * @see https://v0.dev/t/tXVZrB6wnc1
 * Documentation: https://v0.dev/docs#integrating-generated-code-into-your-nextjs-app
 */

/** Add fonts into your Next.js project:

import { Inter } from 'next/font/google'

inter({
  subsets: ['latin'],
  display: 'swap',
})

To read more about using these font, please visit the Next.js documentation:
- App Directory: https://nextjs.org/docs/app/building-your-application/optimizing/fonts
- Pages Directory: https://nextjs.org/docs/pages/building-your-application/optimizing/fonts
**/
import Link from "next/link";
import { AvatarImage, AvatarFallback, Avatar } from "@/components/ui/avatar";
import {
  DropdownMenuTrigger,
  DropdownMenuItem,
  DropdownMenuSeparator,
  DropdownMenuContent,
  DropdownMenu,
} from "@/components/ui/dropdown-menu";
import { Button } from "@/components/ui/button";
import { SheetTrigger, SheetContent, Sheet } from "@/components/ui/sheet";
import { JSX, SVGProps } from "react";
import { auth, signIn, signOut } from "@/utils/auth";
import { ModeToggle } from "../theme-toggle";
import { SignIn } from "./sign-in";

export async function Navbar() {
  const session = await auth();
  return (
    <header className="flex items-center justify-between bg-white px-4 py-3 shadow-sm dark:bg-gray-950 md:px-6">
      <Link className="flex items-center gap-2 text-lg font-semibold" href="/">
        <MountainIcon className="h-6 w-6" />
        <span>Mind The Blog</span>
      </Link>
      <nav className="flex items-center gap-4">
        <SignIn />
        <ModeToggle />
        <Link
          className="hidden text-sm font-medium transition-colors hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50 md:block"
          href="/"
        >
          Home
        </Link>
        <Link
          className="hidden text-sm font-medium transition-colors hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50 md:block"
          href="app"
        >
          App
        </Link>

        {session?.user?.email === "ctafsiras@gmail.com" && (
          <Link
            className="hidden text-sm font-medium transition-colors hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50 md:block"
            href="dashboard"
          >
            Dashboard
          </Link>
        )}
        <div className="flex items-center gap-2">
          {session?.user ? (
            <DropdownMenu>
              <DropdownMenuTrigger asChild>
                <Avatar className="h-8 w-8">
                  <AvatarImage
                    alt="@shadcn"
                    src={session.user.image as string}
                  />
                  <AvatarFallback>{session.user.name![0]}</AvatarFallback>
                </Avatar>
              </DropdownMenuTrigger>
              <DropdownMenuContent>
                <DropdownMenuItem>My Account</DropdownMenuItem>
                <DropdownMenuItem>Settings</DropdownMenuItem>
                <DropdownMenuSeparator />
                <DropdownMenuItem>
                  <form
                    action={async () => {
                      "use server";
                      await signOut();
                    }}
                  >
                    <button type="submit">Sign Out</button>
                  </form>
                </DropdownMenuItem>
              </DropdownMenuContent>
            </DropdownMenu>
          ) : (
            <form
              action={async () => {
                "use server";
                await signIn("google");
              }}
            >
              <button
                className="hidden h-8 items-center justify-center rounded-md bg-gray-900 px-4 text-sm font-medium text-gray-50 transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300 md:inline-flex"
                type="submit"
              >
                Signin with Google
              </button>
            </form>
          )}
        </div>
        <Sheet>
          <SheetTrigger asChild>
            <Button
              className="rounded-full border border-gray-200 w-8 h-8 dark:border-gray-800 md:hidden"
              size="icon"
              variant="ghost"
            >
              <MenuIcon className="h-6 w-6" />
              <span className="sr-only">Toggle navigation</span>
            </Button>
          </SheetTrigger>
          <SheetContent side="left">
            <div className="grid gap-4 p-4">
              <Link
                className="flex items-center gap-2 text-sm font-medium transition-colors hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50"
                href="#"
              >
                Home
              </Link>
              <Link
                className="flex items-center gap-2 text-sm font-medium transition-colors hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50"
                href="app"
              >
                App
              </Link>

              {session?.user?.email === "ctafsiras@gmail.com" && (
                <Link
                  className="flex items-center gap-2 text-sm font-medium transition-colors hover:text-gray-900 dark:text-gray-400 dark:hover:text-gray-50"
                  href="dashboard"
                >
                  Dashboard
                </Link>
              )}
              {!session?.user && (
                <form
                  action={async () => {
                    "use server";
                    await signIn("google");
                  }}
                >
                  <button
                    className="inline-flex items-center justify-center rounded-md bg-gray-900 px-4 py-2 text-sm font-medium text-gray-50 transition-colors hover:bg-gray-900/90 focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-gray-950 disabled:pointer-events-none disabled:opacity-50 dark:bg-gray-50 dark:text-gray-900 dark:hover:bg-gray-50/90 dark:focus-visible:ring-gray-300"
                    type="submit"
                  >
                    Signin with Google
                  </button>
                </form>
              )}
            </div>
          </SheetContent>
        </Sheet>
      </nav>
    </header>
  );
}

function MenuIcon(props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <line x1="4" x2="20" y1="12" y2="12" />
      <line x1="4" x2="20" y1="6" y2="6" />
      <line x1="4" x2="20" y1="18" y2="18" />
    </svg>
  );
}

function MountainIcon(
  props: JSX.IntrinsicAttributes & SVGProps<SVGSVGElement>
) {
  return (
    <svg
      {...props}
      xmlns="http://www.w3.org/2000/svg"
      width="24"
      height="24"
      viewBox="0 0 24 24"
      fill="none"
      stroke="currentColor"
      strokeWidth="2"
      strokeLinecap="round"
      strokeLinejoin="round"
    >
      <path d="m8 3 4 8 5-5 5 15H2L8 3z" />
    </svg>
  );
}
